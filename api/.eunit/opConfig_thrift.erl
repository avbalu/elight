%%
%% Autogenerated by Thrift Compiler (0.9.1)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(opConfig_thrift).
-behaviour(thrift_service).


-include("opConfig_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info('i am a dummy struct') -> undefined.
%%% interface
% get_host_inactive_timeout(This, WhichDb)
function_info('get_host_inactive_timeout', params_type) ->
  {struct, [{1, i32}]}
;
function_info('get_host_inactive_timeout', reply_type) ->
  i32;
function_info('get_host_inactive_timeout', exceptions) ->
  {struct, []}
;
% set_host_inactive_timeout(This, T)
function_info('set_host_inactive_timeout', params_type) ->
  {struct, [{1, {struct, {'api_types', 'duration'}}}]}
;
function_info('set_host_inactive_timeout', reply_type) ->
  i32;
function_info('set_host_inactive_timeout', exceptions) ->
  {struct, [{1, {struct, {'api_types', 'invalidInput'}}}]}
;
% restore_default_host_inactive_timeout(This)
function_info('restore_default_host_inactive_timeout', params_type) ->
  {struct, []}
;
function_info('restore_default_host_inactive_timeout', reply_type) ->
  oneway_void;
function_info('restore_default_host_inactive_timeout', exceptions) ->
  {struct, []}
;
% get_perf_retention_period(This, WhichDb)
function_info('get_perf_retention_period', params_type) ->
  {struct, [{1, i32}]}
;
function_info('get_perf_retention_period', reply_type) ->
  i32;
function_info('get_perf_retention_period', exceptions) ->
  {struct, []}
;
% set_perf_retention_period(This, T)
function_info('set_perf_retention_period', params_type) ->
  {struct, [{1, {struct, {'api_types', 'duration'}}}]}
;
function_info('set_perf_retention_period', reply_type) ->
  i32;
function_info('set_perf_retention_period', exceptions) ->
  {struct, [{1, {struct, {'api_types', 'invalidInput'}}}]}
;
% restore_default_perf_retention_period(This)
function_info('restore_default_perf_retention_period', params_type) ->
  {struct, []}
;
function_info('restore_default_perf_retention_period', reply_type) ->
  oneway_void;
function_info('restore_default_perf_retention_period', exceptions) ->
  {struct, []}
;
% get_service_no_response_rate(This, R)
function_info('get_service_no_response_rate', params_type) ->
  {struct, [{1, {struct, {'api_types', 'rate'}}}]}
;
function_info('get_service_no_response_rate', reply_type) ->
  i32;
function_info('get_service_no_response_rate', exceptions) ->
  {struct, []}
;
% set_service_no_response_rate(This, T)
function_info('set_service_no_response_rate', params_type) ->
  {struct, [{1, {struct, {'api_types', 'duration'}}}]}
;
function_info('set_service_no_response_rate', reply_type) ->
  i32;
function_info('set_service_no_response_rate', exceptions) ->
  {struct, [{1, {struct, {'api_types', 'invalidInput'}}}]}
;
% restore_default_service_no_response_rate(This)
function_info('restore_default_service_no_response_rate', params_type) ->
  {struct, []}
;
function_info('restore_default_service_no_response_rate', reply_type) ->
  oneway_void;
function_info('restore_default_service_no_response_rate', exceptions) ->
  {struct, []}
;
% get_filters(This)
function_info('get_filters', params_type) ->
  {struct, []}
;
function_info('get_filters', reply_type) ->
  {list, {struct, {'api_types', 'filter'}}};
function_info('get_filters', exceptions) ->
  {struct, []}
;
% set_filter(This, Filter)
function_info('set_filter', params_type) ->
  {struct, [{1, {struct, {'api_types', 'filter'}}}]}
;
function_info('set_filter', reply_type) ->
  oneway_void;
function_info('set_filter', exceptions) ->
  {struct, []}
;
% delete_filter(This, FilterId)
function_info('delete_filter', params_type) ->
  {struct, [{1, i32}]}
;
function_info('delete_filter', reply_type) ->
  oneway_void;
function_info('delete_filter', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> no_function.

