%%
%% Autogenerated by Thrift Compiler (0.9.1)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(status_thrift).
-behaviour(thrift_service).


-include("status_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info('i am a dummy struct') -> undefined.
%%% interface
% ping(This)
function_info('ping', params_type) ->
  {struct, []}
;
function_info('ping', reply_type) ->
  string;
function_info('ping', exceptions) ->
  {struct, []}
;
% hostProfile(This, Host)
function_info('hostProfile', params_type) ->
  {struct, [{1, string}]}
;
function_info('hostProfile', reply_type) ->
  {struct, {'api_types', 'hostProfile'}};
function_info('hostProfile', exceptions) ->
  {struct, [{1, {struct, {'api_types', 'noEntry'}}},
          {2, {struct, {'api_types', 'invalidInput'}}}]}
;
% hostProfiles(This)
function_info('hostProfiles', params_type) ->
  {struct, []}
;
function_info('hostProfiles', reply_type) ->
  {list, {struct, {'api_types', 'hostProfile'}}};
function_info('hostProfiles', exceptions) ->
  {struct, []}
;
% hosts(This)
function_info('hosts', params_type) ->
  {struct, []}
;
function_info('hosts', reply_type) ->
  {list, string};
function_info('hosts', exceptions) ->
  {struct, []}
;
% clientsUsing(This, Server)
function_info('clientsUsing', params_type) ->
  {struct, [{1, string}]}
;
function_info('clientsUsing', reply_type) ->
  {list, string};
function_info('clientsUsing', exceptions) ->
  {struct, []}
;
% serversUsedBy(This, Client)
function_info('serversUsedBy', params_type) ->
  {struct, [{1, string}]}
;
function_info('serversUsedBy', reply_type) ->
  {list, string};
function_info('serversUsedBy', exceptions) ->
  {struct, []}
;
% groups(This)
function_info('groups', params_type) ->
  {struct, []}
;
function_info('groups', reply_type) ->
  {list, {list, string}};
function_info('groups', exceptions) ->
  {struct, []}
;
% serviceProfileByClient(This, Client, Server, Eservice)
function_info('serviceProfileByClient', params_type) ->
  {struct, [{3, string},
          {1, string},
          {2, {struct, {'api_types', 'serviceId'}}}]}
;
function_info('serviceProfileByClient', reply_type) ->
  {struct, {'api_types', 'serviceProfile'}};
function_info('serviceProfileByClient', exceptions) ->
  {struct, [{1, {struct, {'api_types', 'noEntry'}}},
          {2, {struct, {'api_types', 'invalidInput'}}}]}
;
% servicePerformance(This, Server, Eservice)
function_info('servicePerformance', params_type) ->
  {struct, [{1, string},
          {2, {struct, {'api_types', 'serviceId'}}}]}
;
function_info('servicePerformance', reply_type) ->
  {list, {struct, {'api_types', 'performanceData'}}};
function_info('servicePerformance', exceptions) ->
  {struct, []}
;
% servicePerformanceByClient(This, Client, Server, Eservice)
function_info('servicePerformanceByClient', params_type) ->
  {struct, [{1, string},
          {2, string},
          {3, {struct, {'api_types', 'serviceId'}}}]}
;
function_info('servicePerformanceByClient', reply_type) ->
  {list, {struct, {'api_types', 'performanceData'}}};
function_info('servicePerformanceByClient', exceptions) ->
  {struct, []}
;
% overview(This)
function_info('overview', params_type) ->
  {struct, []}
;
function_info('overview', reply_type) ->
  {struct, {'api_types', 'dataCenter'}};
function_info('overview', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> no_function.

