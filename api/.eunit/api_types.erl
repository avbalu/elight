%%
%% Autogenerated by Thrift Compiler (0.9.1)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(api_types).

-include("api_types.hrl").

-export([struct_info/1, struct_info_ext/1]).

struct_info('serviceId') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('timeStamp') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('network') ->
  {struct, [{1, string},
          {2, byte}]}
;

struct_info('duration') ->
  {struct, [{1, i64},
          {2, i32}]}
;

struct_info('invalidInput') ->
  {struct, [{1, string}]}
;

struct_info('duplicateEntry') ->
  {struct, [{1, string}]}
;

struct_info('noEntry') ->
  {struct, [{1, string}]}
;

struct_info('rate') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('endStatus') ->
  {struct, [{1, byte},
          {2, byte}]}
;

struct_info('trafficStats') ->
  {struct, [{10, i64},
          {11, i64},
          {12, i64},
          {13, i64},
          {14, i64},
          {15, i64}]}
;

struct_info('responseTimeStats') ->
  {struct, [{4, i32},
          {5, i32},
          {6, {struct, {'api_types', 'timeStamp'}}}]}
;

struct_info('clientProfile') ->
  {struct, [{1, {struct, {'api_types', 'responseTimeStats'}}},
          {2, {struct, {'api_types', 'trafficStats'}}}]}
;

struct_info('serviceProfile') ->
  {struct, [{2, {struct, {'api_types', 'timeStamp'}}},
          {3, {struct, {'api_types', 'timeStamp'}}},
          {4, i64},
          {5, i64},
          {6, {map, {struct, {'api_types', 'endStatus'}}, i32}},
          {7, {struct, {'api_types', 'duration'}}},
          {8, {struct, {'api_types', 'duration'}}},
          {9, {struct, {'api_types', 'trafficStats'}}},
          {10, {struct, {'api_types', 'responseTimeStats'}}},
          {11, {struct, {'api_types', 'responseTimeStats'}}}]}
;

struct_info('hostProfile') ->
  {struct, [{1, string},
          {2, {struct, {'api_types', 'timeStamp'}}},
          {3, {struct, {'api_types', 'timeStamp'}}},
          {5, {map, {struct, {'api_types', 'serviceId'}}, {struct, {'api_types', 'serviceProfile'}}}}]}
;

struct_info('slowest') ->
  {struct, [{1, {struct, {'api_types', 'serviceId'}}},
          {2, string},
          {3, string},
          {4, i32},
          {5, {struct, {'api_types', 'timeStamp'}}},
          {6, i32},
          {7, string}]}
;

struct_info('clientele') ->
  {struct, [{1, string},
          {2, {struct, {'api_types', 'serviceId'}}},
          {3, i32}]}
;

struct_info('point') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('dataCenter') ->
  {struct, [{1, i32},
          {2, i32},
          {3, string},
          {4, {struct, {'api_types', 'slowest'}}},
          {5, string},
          {6, string},
          {7, string},
          {8, string},
          {9, string},
          {10, string},
          {11, string},
          {12, string}]}
;

struct_info('transactionData') ->
  {struct, [{1, {struct, {'api_types', 'timeStamp'}}},
          {2, i32},
          {3, i32},
          {4, i32},
          {5, i32},
          {6, i32},
          {7, i32}]}
;

struct_info('performanceData') ->
  {struct, [{1, {struct, {'api_types', 'timeStamp'}}},
          {2, i32},
          {3, i32},
          {4, {list, {struct, {'api_types', 'transactionData'}}}}]}
;

struct_info('compare') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('range') ->
  {struct, [{1, i32},
          {2, i32}]}
;

struct_info('portOrRange') ->
  {struct, [{1, {struct, {'api_types', 'compare'}}},
          {2, {struct, {'api_types', 'range'}}}]}
;

struct_info('action') ->
  {struct, [{1, i32},
          {2, i32},
          {3, i32},
          {4, i32},
          {5, i32}]}
;

struct_info('condition') ->
  {struct, [{1, {struct, {'api_types', 'network'}}},
          {2, {struct, {'api_types', 'network'}}},
          {3, i32},
          {4, {struct, {'api_types', 'portOrRange'}}},
          {41, i32},
          {42, i32},
          {5, i32},
          {6, i32},
          {7, i32},
          {8, i32},
          {9, i32}]}
;

struct_info('filter') ->
  {struct, [{1, i32},
          {2, {struct, {'api_types', 'condition'}}},
          {4, {struct, {'api_types', 'action'}}},
          {5, string}]}
;

struct_info('filterStats') ->
  {struct, [{1, i32},
          {2, i32},
          {3, {struct, {'api_types', 'timeStamp'}}},
          {4, i32},
          {5, {struct, {'api_types', 'timeStamp'}}},
          {6, i32},
          {7, i32},
          {8, i32}]}
;

struct_info('filterAlert') ->
  {struct, [{1, string},
          {2, {struct, {'api_types', 'serviceId'}}},
          {3, string},
          {4, {struct, {'api_types', 'filter'}}}]}
;

struct_info('i am a dummy struct') -> undefined.

struct_info_ext('serviceId') ->
  {struct, [{1, undefined, i32, 'port', undefined},
          {2, undefined, i32, 'proto', undefined}]}
;

struct_info_ext('timeStamp') ->
  {struct, [{1, undefined, i32, 'seconds', 0},
          {2, undefined, i32, 'micro', 0}]}
;

struct_info_ext('network') ->
  {struct, [{1, undefined, string, 'ipAddress', undefined},
          {2, undefined, byte, 'mask', undefined}]}
;

struct_info_ext('duration') ->
  {struct, [{1, undefined, i64, 'seconds', 0},
          {2, undefined, i32, 'micro', 0}]}
;

struct_info_ext('invalidInput') ->
  {struct, [{1, undefined, string, 'object', undefined}]}
;

struct_info_ext('duplicateEntry') ->
  {struct, [{1, undefined, string, 'object', undefined}]}
;

struct_info_ext('noEntry') ->
  {struct, [{1, undefined, string, 'object', undefined}]}
;

struct_info_ext('rate') ->
  {struct, [{1, undefined, i32, 'count', undefined},
          {2, undefined, i32, 'seconds', undefined}]}
;

struct_info_ext('endStatus') ->
  {struct, [{1, undefined, byte, 'endCause', undefined},
          {2, undefined, byte, 'errorCode', undefined}]}
;

struct_info_ext('trafficStats') ->
  {struct, [{10, undefined, i64, 'rxBytes', 0},
          {11, undefined, i64, 'rxFrames', 0},
          {12, undefined, i64, 'txBytes', 0},
          {13, undefined, i64, 'txFrames', 0},
          {14, undefined, i64, 'syn_retrans', 0},
          {15, undefined, i64, 'retrans', 0}]}
;

struct_info_ext('responseTimeStats') ->
  {struct, [{4, undefined, i32, 'responseTimeSum', 0},
          {5, undefined, i32, 'peakResponseTime', 0},
          {6, undefined, {struct, {'api_types', 'timeStamp'}}, 'peakTime', #timeStamp{}}]}
;

struct_info_ext('clientProfile') ->
  {struct, [{1, undefined, {struct, {'api_types', 'responseTimeStats'}}, 'rto', #responseTimeStats{}},
          {2, undefined, {struct, {'api_types', 'trafficStats'}}, 'trSt', #trafficStats{}}]}
;

struct_info_ext('serviceProfile') ->
  {struct, [{2, undefined, {struct, {'api_types', 'timeStamp'}}, 'activeSince', #timeStamp{}},
          {3, undefined, {struct, {'api_types', 'timeStamp'}}, 'lastActive', #timeStamp{}},
          {4, undefined, i64, 'nTransactions', 0},
          {5, undefined, i64, 'nConnections', 0},
          {6, undefined, {map, {struct, {'api_types', 'endStatus'}}, i32}, 'count', dict:new()},
          {7, undefined, {struct, {'api_types', 'duration'}}, 'totalSessionLength', #duration{}},
          {8, undefined, {struct, {'api_types', 'duration'}}, 'maxSessionLength', #duration{}},
          {9, undefined, {struct, {'api_types', 'trafficStats'}}, 'trSt', #trafficStats{}},
          {10, undefined, {struct, {'api_types', 'responseTimeStats'}}, 'rto', #responseTimeStats{}},
          {11, undefined, {struct, {'api_types', 'responseTimeStats'}}, 'cto', #responseTimeStats{}}]}
;

struct_info_ext('hostProfile') ->
  {struct, [{1, undefined, string, 'key', undefined},
          {2, undefined, {struct, {'api_types', 'timeStamp'}}, 'activeSince', #timeStamp{}},
          {3, undefined, {struct, {'api_types', 'timeStamp'}}, 'lastActive', #timeStamp{}},
          {5, undefined, {map, {struct, {'api_types', 'serviceId'}}, {struct, {'api_types', 'serviceProfile'}}}, 'sps', dict:new()}]}
;

struct_info_ext('slowest') ->
  {struct, [{1, undefined, {struct, {'api_types', 'serviceId'}}, 'service_id', #serviceId{}},
          {2, undefined, string, 'server', undefined},
          {3, undefined, string, 'client', undefined},
          {4, undefined, i32, 'response', undefined},
          {5, undefined, {struct, {'api_types', 'timeStamp'}}, 'when_', #timeStamp{}},
          {6, undefined, i32, 'responseSize', undefined},
          {7, undefined, string, 'file', undefined}]}
;

struct_info_ext('clientele') ->
  {struct, [{1, undefined, string, 'server', undefined},
          {2, undefined, {struct, {'api_types', 'serviceId'}}, 'eservice', #serviceId{}},
          {3, undefined, i32, 'nClients', undefined}]}
;

struct_info_ext('point') ->
  {struct, [{1, undefined, i32, 'x', undefined},
          {2, undefined, i32, 'y', undefined}]}
;

struct_info_ext('dataCenter') ->
  {struct, [{1, undefined, i32, 'nHosts', undefined},
          {2, undefined, i32, 'nGroups', undefined},
          {3, undefined, string, 'slowServer', undefined},
          {4, undefined, {struct, {'api_types', 'slowest'}}, 'eservice', #slowest{}},
          {5, undefined, string, 'mostConnectedTo', undefined},
          {6, undefined, string, 'leastConnectedTo', undefined},
          {7, undefined, string, 'mostAccomplished', undefined},
          {8, undefined, string, 'leastAccomplished', undefined},
          {9, undefined, string, 'highestConnectionRate', undefined},
          {10, undefined, string, 'lowestConnectionRate', undefined},
          {11, undefined, string, 'higestTransactionRate', undefined},
          {12, undefined, string, 'lowestTransactionRate', undefined}]}
;

struct_info_ext('transactionData') ->
  {struct, [{1, undefined, {struct, {'api_types', 'timeStamp'}}, 'tStart', #timeStamp{}},
          {2, undefined, i32, 'latency', undefined},
          {3, undefined, i32, 'rxBytes', undefined},
          {4, undefined, i32, 'rxFrames', undefined},
          {5, undefined, i32, 'txBytes', undefined},
          {6, undefined, i32, 'txFrames', undefined},
          {7, undefined, i32, 'retransmissions', undefined}]}
;

struct_info_ext('performanceData') ->
  {struct, [{1, undefined, {struct, {'api_types', 'timeStamp'}}, 'tStart', #timeStamp{}},
          {2, undefined, i32, 'connectionLatency', undefined},
          {3, undefined, i32, 'retransmissions', undefined},
          {4, undefined, {list, {struct, {'api_types', 'transactionData'}}}, 'transactions', []}]}
;

struct_info_ext('compare') ->
  {struct, [{1, undefined, i32, 'op', undefined},
          {2, undefined, i32, 'port', undefined}]}
;

struct_info_ext('range') ->
  {struct, [{1, undefined, i32, 'startItem', undefined},
          {2, undefined, i32, 'endItem', undefined}]}
;

struct_info_ext('portOrRange') ->
  {struct, [{1, undefined, {struct, {'api_types', 'compare'}}, 'port', #compare{}},
          {2, undefined, {struct, {'api_types', 'range'}}, 'range', #range{}}]}
;

struct_info_ext('action') ->
  {struct, [{1, optional, i32, 'debounce', 0},
          {2, optional, i32, 'min', 0},
          {3, optional, i32, 'logSession', 0},
          {4, optional, i32, 'notify', 0},
          {5, optional, i32, 'alertLevel', 0}]}
;

struct_info_ext('condition') ->
  {struct, [{1, optional, {struct, {'api_types', 'network'}}, 'client', #network{}},
          {2, optional, {struct, {'api_types', 'network'}}, 'server', #network{}},
          {3, optional, i32, 'proto', undefined},
          {4, optional, {struct, {'api_types', 'portOrRange'}}, 'portOrRange', #portOrRange{}},
          {41, optional, i32, 'latency', undefined},
          {42, optional, i32, 'connectionLatency', undefined},
          {5, optional, i32, 'avgConnectionLatency', undefined},
          {6, optional, i32, 'maxConnectionLatency', undefined},
          {7, optional, i32, 'avglatency', undefined},
          {8, optional, i32, 'maxLatency', undefined},
          {9, optional, i32, 'error', undefined}]}
;

struct_info_ext('filter') ->
  {struct, [{1, required, i32, 'id', undefined},
          {2, required, {struct, {'api_types', 'condition'}}, 'condition', #condition{}},
          {4, required, {struct, {'api_types', 'action'}}, 'action', #action{}},
          {5, optional, string, 'comment', ""}]}
;

struct_info_ext('filterStats') ->
  {struct, [{1, required, i32, 'id', undefined},
          {2, required, i32, 'matched', 0},
          {3, required, {struct, {'api_types', 'timeStamp'}}, 'startTime', #timeStamp{}},
          {4, optional, i32, 'debounced_matches', 0},
          {5, optional, {struct, {'api_types', 'timeStamp'}}, 'debounce_end', #timeStamp{}},
          {6, optional, i32, 'debounce_count', 0},
          {7, required, i32, 'logged', 0},
          {8, required, i32, 'notified', 0}]}
;

struct_info_ext('filterAlert') ->
  {struct, [{1, undefined, string, 'server', undefined},
          {2, undefined, {struct, {'api_types', 'serviceId'}}, 'serviceId', #serviceId{}},
          {3, undefined, string, 'client', undefined},
          {4, undefined, {struct, {'api_types', 'filter'}}, 'filter', #filter{}}]}
;

struct_info_ext('i am a dummy struct') -> undefined.

