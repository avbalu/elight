-module(api_sup).

-behaviour(supervisor).

%% API
-export([start_link/0]).

%% Supervisor callbacks
-export([init/1]).

%% Helper macro for declaring children of supervisor
-define(CHILD(I, Type), {I, {I, start_link, []}, permanent, 5000, Type, [I]}).

%% ===================================================================
%% API functions
%% ===================================================================

start_link() ->
    supervisor:start_link({local, ?MODULE}, ?MODULE, []).

%% ===================================================================
%% Supervisor callbacks
%% ===================================================================

init([]) ->

{ok,ConfigPort} = application:get_env(config_tcp_port),
{ok,StatusPort} = application:get_env(status_tcp_port),

    { ok, 
     { { one_for_one, 5, 10 },

% begin child specs
       [ 
% config child spec
	 { config, 
	   { thrift_socket_server, 
	     start,
	     [ { handler, config },
	       { service, config_thrift },
	       { port, ConfigPort },
	       { name, api_config }
	     ]
	   },
	   permanent,
	   2000,
	   worker,
	   [ thrift_socket_server ]
	 },

% status child spec
	 { status, 
	   { thrift_socket_server, 
	     start,
	     [ { handler, status },
	       { service, config_thrift },
	       { port, StatusPort },
	       { name, api_status }
	     ]
	   },
	   permanent,
	   2000,
	   worker,
	   [ thrift_socket_server ]
	 }
       ]
% end child specs
     }
    }.


	     
       
