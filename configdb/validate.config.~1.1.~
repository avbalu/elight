%%-*-erlang-*-

F = fun(<<"0.0.0.0">>) -> 
	    {error, <<"IP address can not be all zeros">>};
       (<<"255.255.255.255">>) -> 
	    {error, <<"IP address can not be all ones">>};
       (Bin) when size(Bin) /= 4 -> 
	    {error, 
	     [<<"IP address ",Bin, " should have 4 bytes">>]};
       (Bin) -> inet_parse:address(list_to_binary(Bin))
    end,
[
 { validate,
   session_mgrs, 
   fun(L) -> 
	   case lists:fold(
		  fun(E,{OK,Error}) -> 
			  case F(E) of
			      {ok,IP} -> {[IP|OK], Error};
			      {error,Reason} -> {OK, [Reason|Error]}
			  end
		  end, 
		  {[], []},
		  L
		 ) of
	       {OK,[]} -> {ok, OK};
	       {_OK, Error} -> {error, Error}
	   end,
   end,
   fun inet_parse:ntoa/1
 }
].
